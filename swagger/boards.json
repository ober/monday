{
  "apiVersion": "v1",
  "swaggerVersion": "1.2",
  "resourcePath": "",
  "apis": [
    {
      "path": "/v1/boards.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get all the account's boards.",
          "nickname": "GET--version-boards---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results. (default value is 25)</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "only_globals",
              "description": "<p>Return only global boards</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "query",
              "name": "order_by_latest",
              "description": "<p>Order by newest boards.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::Board",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Creates a new Board.",
          "nickname": "POST--version-boards---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The Board’s owner.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "<p>The board’s name.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "description",
              "description": "<p>The board’s description.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "board_kind",
              "description": "<p>The board’s kind. can be ‘public’ (default), ‘shareable’ or ‘private’).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "API::V1::Board",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 201,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns a specific board.",
          "nickname": "GET--version-boards--board_id---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "type": "API::V1::Board",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Archives a specific board",
          "nickname": "DELETE--version-boards--board_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "type": "API::V1::Board",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/groups.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get all the groups of a board",
          "nickname": "GET--version-boards--board_id-groups---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "show_archived",
              "description": "<p>Return archived groups too.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "query",
              "name": "show_deleted",
              "description": "<p>Return archived groups too.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update group's info",
          "nickname": "PUT--version-boards--board_id-groups---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "group_id",
              "description": "<p>The group’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": "<p>New title for the group.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "color",
              "description": "<p>Group color. options: 037f4c - dark green, fdab3d - orange, 579bfc - blue, e2445c - red, 00c875 - green, c4c4c4 - grey, 0086c0 - dark blue, a25ddc - purple, ffcb00 - yellow, 333333 - black</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Create a new group in the board.",
          "nickname": "POST--version-boards--board_id-groups---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": "<p>The Group’s title.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/groups/{group_id}/move.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Move group to another board.",
          "nickname": "POST--version-boards--board_id-groups--group_id-move---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The original board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "group_id",
              "description": "<p>The group’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The user performing the action unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "dest_board_id",
              "description": "<p>The destination board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/groups/{group_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Archive a specific group",
          "nickname": "DELETE--version-boards--board_id-groups--group_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "group_id",
              "description": "<p>The group’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get all the board's columns.",
          "nickname": "GET--version-boards--board_id-columns---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "all_columns",
              "description": "<p>Define if to return archived columns or not. Default is false.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "<p>You can define 4 types of columns: <em>person</em>, <em>status</em>, <em>text</em>, <em>date</em> or <em>numbers</em>.</p>\n\n<p>A <strong>text</strong> column has simple string as its values.</p>\n\n<p>A <strong>person</strong> column displays a user as the column’s value.</p>\n\n<p>A <strong>status</strong> column displays a color and a label as the column value.<br />\nYou can set a label to each of the 10 predefined colors by sending an array of strings in the <em>labels</em> parameter.</p>\n\n<p>A <strong>date</strong> column that displays a date value.</p>\n\n<p>A <strong>numbers</strong> column that displays numeric values.</p>\n\n<p>A <strong>timeline</strong> column that displays date range values.</p>\n\n",
          "summary": "Add a new column to the board.",
          "nickname": "POST--version-boards--board_id-columns---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": "<p>The column’s name.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "type",
              "description": "<p>The column’s type. It can be status, person, text, date, numbers or timeline.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "labels",
              "description": "<p>A hash for labels defining a <strong>status</strong> column. (In the request body use <strong>labels[0]=In Progress&amp;labels[1]=Done</strong> and so on.)</p>\n",
              "type": "Hash",
              "dataType": "Hash",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a column's definition.",
          "nickname": "PUT--version-boards--board_id-columns--column_id---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>The column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": null,
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "color",
              "description": null,
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "labels",
              "description": null,
              "type": "Hash",
              "dataType": "Hash",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes a column.",
          "nickname": "DELETE--version-boards--board_id-columns--column_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>The column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/value.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get a column value for a given Pulse.",
          "nickname": "GET--version-boards--board_id-columns--column_id-value---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>The column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "query",
              "name": "pulse_id",
              "description": null,
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "return_as_array",
              "description": "<p>Indicatee if to wrap the answer in array</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/text.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a text column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-text---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "text",
              "description": "<p>A <em>Text</em> column’s value.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/person.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a Person column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-person---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>A <em>Person</em> column’s user identifier value.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            },
            {
              "code": 404,
              "message": "Invalid user"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/status.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a Status column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-status---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "color_index",
              "description": "<p>A <em>Status</em> column’s color index (must be a 0-19 value).</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "update_id",
              "description": "<p>A <em>Status</em> column’s note update identifier (optional).</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/date.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a Due Date column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-date---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "date_str",
              "description": "<p>A <em>Due Date</em> column’s value in a YYYY-MM-DD format (example: ‘2014-05-15’).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/numeric.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a numbers column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-numeric---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "value",
              "description": "<p>A <em>Numbers</em> column’s value.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/tags.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a tags column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-tags---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "tags",
              "description": "<p>A string of tags with a ‘,’ seperator for multiple tags for example: tag1, tag2, tag3</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/columns/{column_id}/timeline.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update a timeline column's value",
          "nickname": "PUT--version-boards--board_id-columns--column_id-timeline---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>A Board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "column_id",
              "description": "<p>A column’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_id",
              "description": "<p>The pulse’s for which you want to set a column value</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "from",
              "description": "<p>A <em>Timeline</em> column’s start date in a YYYY-MM-DD format (example: ‘2016-12-15’)..</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "to",
              "description": "<p>A <em>Timeline</em> column’s end date in a YYYY-MM-DD format (example: ‘2017-01-07’)..</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Invalid parameter entry"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/pulses.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns the board's pulses",
          "nickname": "GET--version-boards--board_id-pulses---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>Page offset to fetch.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results to return per page.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "order_by",
              "description": "<p>Use ‘updated_at_desc’ to get the pulses ordered by updated_at in descending order, or ‘created_at_desc’ to get the pulses ordered by created_at in descending order.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "API::V1::BoardItem2",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Create a new Pulse in a board.",
          "nickname": "POST--version-boards--board_id-pulses---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The pulse’s owner.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse",
              "description": null,
              "type": "Hash",
              "dataType": "Hash",
              "required": false
            },
            {
              "paramType": "form",
              "name": "pulse[name]",
              "description": "<p>The pulse’s name,</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse[photo_from_url]",
              "description": "<p>A URL to fetch the new pulse’s picture from.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "update",
              "description": null,
              "type": "Hash",
              "dataType": "Hash",
              "required": false
            },
            {
              "paramType": "form",
              "name": "update[text]",
              "description": "<p>The update’s text (can contain simple HTML tags for formatting the text).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "group_id",
              "description": "<p>The group to add this pulse to on the board.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "add_to_bottom",
              "description": "<p>Define if the new pulse will be added to the bottom of the group. Default is false.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::BoardItem2",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 201,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/pulses/{pulse_id}/duplicate.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "",
          "nickname": "POST--version-boards--board_id-pulses--pulse_id-duplicate---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "pulse_id",
              "description": "\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "group_id",
              "description": "<p>The group to add this pulse to on the board.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "owner_id",
              "description": "<p>The user who will own the new pulse. If non given chooses the board’s owner.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/pulses/move.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Move pulses to another group/board.",
          "nickname": "POST--version-boards--board_id-pulses-move---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The user performing the action unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "group_id",
              "description": "<p>The destination group’s unique identifier.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse_ids",
              "description": "<p>A string of pulses ids with a ‘,’ seperator for multiple pulses ids (max 100) for example: id1,id2,id3</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "dest_board_id",
              "description": "<p>The destination board’s unique identifier. Default is original board.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "form",
              "name": "force_move_to_board",
              "description": "<p>Move to destination board even if some columns do not exist in the destination board. Default is false.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 400,
              "message": "Bad Request"
            },
            {
              "code": 201,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/subscribers.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns the board's subscribers",
          "nickname": "GET--version-boards--board_id-subscribers---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>Page offset to fetch.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results to return per page.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "<p>Pad a number of results.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ],
          "type": "API::V1::User",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Add a subscriber to the board",
          "nickname": "PUT--version-boards--board_id-subscribers---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The user ID to add as subscriber</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "as_admin",
              "description": "<p>Add the user as an admin</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::User",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/boards/{board_id}/subscribers/{user_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Removes a subscriber from the board",
          "nickname": "DELETE--version-boards--board_id-subscribers--user_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "board_id",
              "description": "<p>The board’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "user_id",
              "description": "<p>The user ID to add as subscriber</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    }
  ],
  "basePath": "https://api.monday.com",
  "models": {
    "API::V1::Board": {
      "id": "API::V1::Board",
      "name": "API::V1::Board",
      "properties": {
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "integer",
          "description": "The board's unique identifier."
        },
        "name": {
          "required": true,
          "type": "string",
          "description": "The board's name."
        },
        "description": {
          "required": true,
          "type": "string",
          "description": "The board's description."
        },
        "columns": {
          "required": true,
          "type": "array",
          "description": "The board's visible columns."
        },
        "board_kind": {
          "type": "string",
          "description": "The board's kind (public/private/shareable)."
        },
        "groups": {
          "required": true,
          "type": "array",
          "description": "The board's visible groups."
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    },
    "API::V1::BoardItem2": {
      "id": "API::V1::BoardItem2",
      "name": "API::V1::BoardItem2",
      "properties": {
        "pulse": {
          "required": true,
          "type": "object",
          "description": "A Pulse object."
        },
        "board_meta": {
          "required": true,
          "type": "object",
          "description": "The pulse's group and position within the board."
        },
        "column_values": {
          "required": true,
          "type": "object",
          "description": "The pulse's column values."
        }
      }
    },
    "API::V1::User": {
      "id": "API::V1::User",
      "name": "API::V1::User",
      "properties": {
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "integer",
          "description": "The user's unique identifier."
        },
        "name": {
          "required": true,
          "type": "string",
          "description": "The user's name."
        },
        "email": {
          "required": true,
          "type": "string",
          "description": "The user's email."
        },
        "photo_url": {
          "required": true,
          "type": "string",
          "description": "The user's photo_url."
        },
        "title": {
          "required": true,
          "type": "string",
          "description": "The user's title."
        },
        "position": {
          "required": true,
          "type": "string",
          "description": "The user's position."
        },
        "phone": {
          "required": true,
          "type": "string",
          "description": "The user's phone."
        },
        "location": {
          "required": true,
          "type": "string",
          "description": "The user's location."
        },
        "status": {
          "required": true,
          "type": "string",
          "description": "The user's status."
        },
        "birthday": {
          "required": true,
          "type": "string",
          "description": "The user's birthday."
        },
        "is_guest": {
          "type": "boolean",
          "description": "True if the user is guest, false otherwise"
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    }
  }
}
