{
  "apiVersion": "v1",
  "swaggerVersion": "1.2",
  "resourcePath": "",
  "apis": [
    {
      "path": "/v1/pulses.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get all the account's pulses.",
          "nickname": "GET--version-pulses---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>Page offset to fetch.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results to return per page.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "<p>Pad a number of results.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "order_by_latest",
              "description": "<p>Order by newest Pulses.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "query",
              "name": "since",
              "description": "<p>Get updates from a certain date (YYYY-mm-dd) or unix timestamp.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "until",
              "description": "<p>Get updates until a certain date (YYYY-mm-dd) or unix timestamp.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "type": "API::V1::SlimPulse",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns a specific Project.",
          "nickname": "GET--version-pulses--id---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "type": "API::V1::Pulse",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Update Pulse's attributes",
          "nickname": "PUT--version-pulses--id---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "description": "<p>The name for the pulse (up to 140 chars)</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "type": "API::V1::Pulse",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes a specific project.",
          "nickname": "DELETE--version-pulses--id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "archive",
              "description": "<p>Archive a pulse instead of deleting it</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::Pulse",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}/subscribers.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Returns the pulse's subscribers",
          "nickname": "GET--version-pulses--id-subscribers---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>Page offset to fetch.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results to return per page.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "<p>Pad a number of results.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ],
          "type": "API::V1::User",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Add a subscriber to the pulse",
          "nickname": "PUT--version-pulses--id-subscribers---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The user ID to add as subscriber</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "as_admin",
              "description": "<p>Add the user as an admin</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::User",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}/subscribers/{user_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Removes a subscriber from the pulse",
          "nickname": "DELETE--version-pulses--id-subscribers--user_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "user_id",
              "description": "<p>The user ID to add as subscriber</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}/notes.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Gets a list of notes attached to the Pulse.",
          "nickname": "GET--version-pulses--id-notes---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "type": "API::V1::Note",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Creates a new note.",
          "nickname": "POST--version-pulses--id-notes---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": "<p>Update the note’s title.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "content",
              "description": "<p>The note’s new content.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            },
            {
              "paramType": "form",
              "name": "owners_only",
              "description": "<p>Only pulse owners can edit this note.</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The id of the user to be marked as the note’s last updater</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "form",
              "name": "create_update",
              "description": "<p>Indicates wether to create an update on the pulse notifiying subscribers on the changes. (required user_id to be set)</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::Note",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 201,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}/notes/{note_id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "",
          "nickname": "PUT--version-pulses--id-notes--note_id---format-",
          "httpMethod": "PUT",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "note_id",
              "description": "<p>The note’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "title",
              "description": "<p>Update the note’s title.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "content",
              "description": "<p>The note’s new content.</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "form",
              "name": "user_id",
              "description": "<p>The id of the user to be marked as the note’s last updater</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "form",
              "name": "create_update",
              "description": "<p>Indicates wether to create an update on the pulse notifiying subscribers on the changes. (required user_id to be set)</p>\n",
              "type": "Boolean",
              "dataType": "Boolean",
              "required": false
            }
          ],
          "type": "API::V1::Note",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "",
          "nickname": "DELETE--version-pulses--id-notes--note_id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "path",
              "name": "note_id",
              "description": "<p>The note’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/pulses/{id}/updates.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Gets the pulse's updates wall",
          "nickname": "GET--version-pulses--id-updates---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>The pulse’s unique identifier.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>The updates page to fetch.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "<p>How many updates to fetch each page.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            }
          ],
          "type": "API::V1::Update",
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 404,
              "message": "Pulse not found."
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    }
  ],
  "basePath": "https://api.monday.com",
  "models": {
    "API::V1::SlimPulse": {
      "id": "API::V1::SlimPulse",
      "name": "API::V1::SlimPulse",
      "properties": {
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "integer",
          "description": "The pulse's unique identifier."
        },
        "name": {
          "required": true,
          "type": "string",
          "description": "The pulse's name."
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    },
    "API::V1::Pulse": {
      "id": "API::V1::Pulse",
      "name": "API::V1::Pulse",
      "properties": {
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "integer",
          "description": "The pulse's unique identifier."
        },
        "name": {
          "required": true,
          "type": "string",
          "description": "The pulse's name."
        },
        "subscribers": {
          "required": true,
          "type": "array of subscribers.",
          "description": "The board's subscribers."
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    },
    "API::V1::User": {
      "id": "API::V1::User",
      "name": "API::V1::User",
      "properties": {
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "integer",
          "description": "The user's unique identifier."
        },
        "name": {
          "required": true,
          "type": "string",
          "description": "The user's name."
        },
        "email": {
          "required": true,
          "type": "string",
          "description": "The user's email."
        },
        "photo_url": {
          "required": true,
          "type": "string",
          "description": "The user's photo_url."
        },
        "title": {
          "required": true,
          "type": "string",
          "description": "The user's title."
        },
        "position": {
          "required": true,
          "type": "string",
          "description": "The user's position."
        },
        "phone": {
          "required": true,
          "type": "string",
          "description": "The user's phone."
        },
        "location": {
          "required": true,
          "type": "string",
          "description": "The user's location."
        },
        "status": {
          "required": true,
          "type": "string",
          "description": "The user's status."
        },
        "birthday": {
          "required": true,
          "type": "string",
          "description": "The user's birthday."
        },
        "is_guest": {
          "type": "boolean",
          "description": "True if the user is guest, false otherwise"
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    },
    "API::V1::Note": {
      "id": "API::V1::Note",
      "name": "API::V1::Note",
      "properties": {
        "type": {
          "type": "string",
          "description": "The collaboration box type (rich_text, file_list, faq_list)."
        },
        "id": {
          "required": true,
          "type": "string",
          "description": "The note's id."
        },
        "title": {
          "required": true,
          "type": "string",
          "description": "The note's title."
        },
        "project_id": {
          "required": true,
          "type": "string",
          "description": "The note's project_id."
        },
        "permissions": {
          "type": "string",
          "description": "Describes who can edit this note. Can be either 'everyone' or 'owners'."
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    },
    "API::V1::Update": {
      "id": "API::V1::Update",
      "name": "API::V1::Update",
      "properties": {
        "user": {
          "required": true,
          "type": "object",
          "description": "User who wrote the update."
        },
        "url": {
          "type": "string",
          "required": true,
          "description": "The resource's URL."
        },
        "id": {
          "required": true,
          "type": "string",
          "description": "The update's id."
        },
        "body": {
          "required": true,
          "type": "string",
          "description": "The update's body."
        },
        "kind": {
          "required": true,
          "type": "string",
          "description": "The update's kind."
        },
        "has_assets": {
          "required": true,
          "type": "string",
          "description": "The update's has_assets."
        },
        "assets": {
          "required": true,
          "type": "string",
          "description": "The update's assets."
        },
        "created_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Creation time."
        },
        "updated_at": {
          "required": true,
          "type": "DateTime in ISO8601 format",
          "description": "Last update time."
        }
      }
    }
  }
}
