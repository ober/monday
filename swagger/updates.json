{
  "apiVersion": "v1",
  "swaggerVersion": "1.2",
  "resourcePath": "",
  "apis": [
    {
      "path": "/v1/updates.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Get all the account's updates (sorted by descending creation date)",
          "nickname": "GET--version-updates---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "description": "<p>Page offset to fetch.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "description": "<p>Number of results to return per page.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "offset",
              "description": "<p>Pad a number of results.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "since",
              "description": "<p>Get updates from a specific date (YYYY-mm-dd or unix timestamp).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "until",
              "description": "<p>Get updates until a specific date (YYYY-mm-dd or unix timestamp).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "updated_since",
              "description": "<p>Get updates that were edited or replied to after a specific date (YYYY-mm-dd or unix timestamp).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            },
            {
              "paramType": "query",
              "name": "updated_until",
              "description": "<p>Get updates that were edited or replied to before a specific date (YYYY-mm-dd or unix timestamp).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Create a new update",
          "nickname": "POST--version-updates---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "form",
              "name": "user",
              "description": "<p>User id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "pulse",
              "description": "<p>Pulse id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "update_text",
              "description": "<p>The updateâ€™s text (can contain simple HTML tags for formatting the text).</p>\n",
              "type": "String",
              "dataType": "String",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 201,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/updates/{id}.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Return a specific post.",
          "nickname": "GET--version-updates--id---format-",
          "httpMethod": "GET",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>Update id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        },
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Deletes an update.",
          "nickname": "DELETE--version-updates--id---format-",
          "httpMethod": "DELETE",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>Update id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/updates/{id}/like.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Like an update.",
          "nickname": "POST--version-updates--id-like---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>Update id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user",
              "description": "<p>The user id liking the post.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    },
    {
      "path": "/v1/updates/{id}/unlike.{format}",
      "operations": [
        {
          "produces": [
            "application/json"
          ],
          "notes": "",
          "summary": "Unlike an update.",
          "nickname": "POST--version-updates--id-unlike---format-",
          "httpMethod": "POST",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "<p>Update id.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            },
            {
              "paramType": "form",
              "name": "user",
              "description": "<p>The user id unliking the post.</p>\n",
              "type": "Integer",
              "dataType": "Integer",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 401,
              "message": "Invalid API Key"
            },
            {
              "code": 402,
              "message": "Payment Required"
            },
            {
              "code": 200,
              "message": "Success"
            }
          ]
        }
      ]
    }
  ],
  "basePath": "https://api.monday.com"
}
